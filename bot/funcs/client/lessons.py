from typing import TYPE_CHECKING

from bot.utils.datehelp import format_date, weekday_by_date
from bot.utils.phrases import QUESTION


if TYPE_CHECKING:
    import datetime as dt

    from bot.database.repository import LessonsRepository, SettingsRepository


async def get_lessons_for_user(
    settings_repo: "SettingsRepository",
    lessons_repo: "LessonsRepository",
    user_id: int,
    date: "dt.date" = None,
) -> tuple[str, list[str | None]]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ —É—Ä–æ–∫–æ–≤ –∏ –∞–π–¥–∏—à–Ω–∏–∫–∏ —Ñ–æ—Ç–æ.

    –ï—Å–ª–∏ –∫–ª–∞—Å—Å –≤—ã–±—Ä–∞–Ω, —Ç–æ —Å–ø–∏—Å–æ–∫ –∏–∑ –¥–≤—É—Ö –∞–π–¥–∏ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ø–∞—Ä–∞–ª–µ–ª–ª–∏ –∏ –∫–ª–∞—Å—Å–∞.
    –ï—Å–ª–∏ –∫–ª–∞—Å—Å –Ω–µ –≤—ã–±—Ä–∞–Ω, —Ç–æ —Å–ø–∏—Å–æ–∫ –∏–∑ –¥–≤—É—Ö –∞–π–¥–∏ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è–º–∏ –ø–∞—Ä–∞–ª–ª–µ–ª–µ–π.
    –ï—Å–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –Ω–µ—Ç, —Ç–æ None.

    :param settings_repo: –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    :param lessons_repo: –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π —É—Ä–æ–∫–æ–≤.
    :param user_id: –ê–π–¥–∏ —é–∑–µ—Ä–∞.
    :param date: –î–∞—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    :return: –°–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–ø–∏—Å–æ–∫ —Å –¥–≤—É–º—è –∞–π–¥–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
    """
    settings = await settings_repo.get(user_id)

    if settings.class_:
        full_lessons = await lessons_repo.get(date, settings.grade)
        class_lessons = await lessons_repo.get(date, settings.class_)  # noqa
        images = [
            getattr(full_lessons, "image", None),
            getattr(class_lessons, "image", None),
        ]
    else:
        full_10_lessons = await lessons_repo.get(date, "10")
        full_11_lessons = await lessons_repo.get(date, "11")
        images = [
            getattr(full_10_lessons, "image", None),
            getattr(full_11_lessons, "image", None),
        ]

    for_class = settings.class_ if settings.class_ else QUESTION
    if any(images):
        text = (
            f"‚úè –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ <b>{format_date(date)}</b> ({weekday_by_date(date)}) "
            f"–¥–ª—è <b>{for_class}</b> –∫–ª–∞—Å—Å–∞."
        )
    else:
        text = (
            f"üõè –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ <b>{format_date(date)}</b> ({weekday_by_date(date)}) "
            f"–¥–ª—è <b>{for_class}</b> –∫–ª–∞—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ :(."
        )

    return text, images
