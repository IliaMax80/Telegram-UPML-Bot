from typing import TYPE_CHECKING

from aiogram import F, Router
from aiogram.filters import Command, StateFilter

from bot.filters import SaveUpdateUser
from bot.funcs.client.settings import (
    edit_bool_settings_func,
    edit_grade_setting_func,
    edit_laundry_time_func,
)
from bot.keyboards import (
    cancel_state_keyboard,
    choose_grade_keyboard,
    settings_keyboard,
)
from bot.utils.consts import (
    LAUNDRY_ENG_TO_RU,
)
from bot.utils.enums import SlashCommands, TextCommands, UserCallback
from bot.utils.states import EditingSettings

if TYPE_CHECKING:
    from aiogram.fsm.context import FSMContext
    from aiogram.types import CallbackQuery, Message

    from bot.database.repository.repository import Repository


router = Router(name=__name__)

SETTINGS_WELCOME_TEXT = """
–ü—Ä–∏–≤–µ—Ç! –Ø - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!

<b>–ö–ª–∞—Å—Å</b> - —Ç–≤–æ–π –∫–ª–∞—Å—Å.
<b>–£—Ä–æ–∫–∏</b> - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
<b>–ù–æ–≤–æ—Å—Ç–∏</b> - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –Ω–æ–≤–æ—Å—Ç—è—Ö.
<b>–°—Ç–∏—Ä–∫–∞</b> - –≤—Ä–µ–º—è —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è —Å—Ç–∏—Ä–∫–∏.
<b>–°—É—à–∫–∞</b> - –≤—Ä–µ–º—è —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è —Å—É—à–∫–∏.
""".strip()


@router.callback_query(F.data == UserCallback.OPEN_SETTINGS, SaveUpdateUser())
async def settings_callback_handler(
    callback: "CallbackQuery",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"."""
    keyboard = await settings_keyboard(repo.settings, callback.from_user.id)

    await callback.message.edit_text(
        text=SETTINGS_WELCOME_TEXT,
        reply_markup=keyboard,
    )


@router.message(F.text == TextCommands.SETTINGS, SaveUpdateUser())
@router.message(Command(SlashCommands.SETTINGS), SaveUpdateUser())
async def settings_message_handler(
    message: "Message",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/settings"."""
    keyboard = await settings_keyboard(repo.settings, message.from_user.id)

    await message.answer(text=SETTINGS_WELCOME_TEXT, reply_markup=keyboard)


@router.callback_query(F.data.startswith(UserCallback.PREFIX_SWITCH))
async def edit_bool_settings_handler(
    callback: "CallbackQuery",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π "–£—Ä–æ–∫–∏" –∏ "–ù–æ–≤–æ—Å—Ç–∏"."""
    await edit_bool_settings_func(repo.settings, callback.from_user.id, callback.data)

    keyboard = await settings_keyboard(repo.settings, callback.from_user.id)

    await callback.message.edit_text(text=SETTINGS_WELCOME_TEXT, reply_markup=keyboard)


@router.callback_query(F.data.startswith(UserCallback.CHANGE_GRADE_TO_))
async def edit_grade_settings_handler(
    callback: "CallbackQuery",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–≤—ã–±–æ—Ä–∞) –∫–ª–∞—Å—Å–∞."""
    change = await edit_grade_setting_func(
        repo.settings,
        callback.from_user.id,
        callback.data,
    )

    if change:
        await settings_callback_handler(callback, repo)
    else:
        await callback.message.edit_text(
            text=SETTINGS_WELCOME_TEXT,
            reply_markup=choose_grade_keyboard,
        )


@router.callback_query(F.data.startswith(UserCallback.EDIT_SETTINGS_PREFIX))
async def edit_laundry_start_handler(
    callback: "CallbackQuery",
    state: "FSMContext",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∞—á–µ—á–Ω–æ–π."""
    attr = callback.data.replace(UserCallback.EDIT_SETTINGS_PREFIX, "")

    await state.set_state(EditingSettings.writing)
    await state.update_data(start_id=callback.message.message_id, attr=attr)

    text = (
        f"üïõ –í–≤–µ–¥–∏—Ç–µ —á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã –¥–ª—è <b>{LAUNDRY_ENG_TO_RU[attr]}</b> "
        "—á–µ—Ä–µ–∑ —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –ø—Ä–æ–±–µ–ª.\n"
        "<i>(0.30, 1 0, 12,45)</i>"
    )
    await callback.message.edit_text(text=text, reply_markup=cancel_state_keyboard)


@router.message(StateFilter(EditingSettings.writing))
async def edit_laundry_time_handler(
    message: "Message",
    state: "FSMContext",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–∏–Ω—É—Ç–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∞—á–µ—á–Ω–æ–π."""
    data = await state.get_data()
    start_id, attr = data["start_id"], data["attr"]

    text, keyboard = await edit_laundry_time_func(
        repo.settings,
        state,
        message.from_user.id,
        attr,
        message.text,
    )

    await message.delete()
    await message.bot.edit_message_text(
        text=text,
        reply_markup=keyboard,
        message_id=start_id,
        chat_id=message.chat.id,
    )
