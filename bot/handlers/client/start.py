from typing import TYPE_CHECKING, Union

from aiogram import F, Router
from aiogram.filters import Command, StateFilter

from aiogram.types import CallbackQuery, Message

from bot.filters import IsAdmin, SaveUser
from bot.keyboards import admin_panel_keyboard, main_menu_inline_keyboard
from bot.keyboards.client.start import start_reply_keyboard
from bot.utils.consts import AdminCallback, SlashCommands, TextCommands, UserCallback

if TYPE_CHECKING:
    from aiogram.fsm.context import FSMContext
    from bot.database.repository.repository import Repository


router = Router(name=__name__)


@router.message(F.text == TextCommands.START, SaveUser())
@router.message(Command(SlashCommands.START), SaveUser())
async def start_handler(message: "Message", repo: "Repository") -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/start"."""
    text = """
–ü—Ä–∏–≤–µ—Ç! –Ø - —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é.
–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /menu –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º

üìû [–°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º](https://hello.k1rles.ru/)
üêç [–ö–æ–¥ –±–æ—Ç–∞](https://github.com/K1rL3s/Telegram-UPML-Bot)
""".strip()

    await message.reply(
        text=text,
        reply_markup=await start_reply_keyboard(repo, message.from_user.id),
    )


@router.message(F.text == TextCommands.MENU, SaveUser())
@router.message(Command(SlashCommands.MENU))
@router.callback_query(F.data == UserCallback.OPEN_MAIN_MENU, SaveUser())
async def main_menu_handler(
    message: "Union[Message, CallbackQuery]",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/menu" –∏ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"."""
    text = "–ü—Ä–∏–≤–µ—Ç! –Ø - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
    keyboard = await main_menu_inline_keyboard(repo, message.from_user.id)

    if isinstance(message, CallbackQuery):
        await message.message.edit_text(text=text, reply_markup=keyboard)
    else:
        await message.reply(text=text, reply_markup=keyboard)


@router.message(F.text == TextCommands.HELP, SaveUser())
@router.message(Command(SlashCommands.HELP), SaveUser())
async def help_handler(message: "Message") -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/help"."""
    await message.reply("–ü–æ–º–æ—â—å!")


@router.message(F.text == TextCommands.ADMIN_PANEL, IsAdmin())
@router.callback_query(F.data == AdminCallback.OPEN_ADMIN_PANEL, IsAdmin())
async def admin_panel_handler(
    callback: "Union[CallbackQuery, Message]",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"."""
    text = """
–ü—Ä–∏–≤–µ—Ç! –Ø - –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.

*–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–Ω—é* - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –µ–¥—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —Å —Å–∞–π—Ç–∞ –ª–∏—Ü–µ—è.
*–ò–∑–º–µ–Ω–∏—Ç—å –º–µ–Ω—é* - —Ä—É—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –µ–¥—ã.
*–ó–∞–≥—Ä—É–∑–∏—Ç—å —É—Ä–æ–∫–∏* - —Ä—É—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —É—Ä–æ–∫–æ–≤.
*–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ* - —Å–¥–µ–ª–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ.
*–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–π* - —Ä—É—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–π.
""".strip()
    keyboard = await admin_panel_keyboard(repo, callback.from_user.id)

    if isinstance(callback, CallbackQuery):
        await callback.message.edit_text(text=text, reply_markup=keyboard)
    else:
        await callback.answer(text=text, reply_markup=keyboard)


@router.message(F.text == TextCommands.CANCEL, StateFilter("*"))
@router.message(Command(SlashCommands.CANCEL, SlashCommands.STOP), StateFilter("*"))
@router.callback_query(F.data == UserCallback.CANCEL_STATE, StateFilter("*"))
async def cancel_state(
    message: "Union[Message, CallbackQuery]",
    state: "FSMContext",
    repo: "Repository",
) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ —Å –æ—Ç–º–µ–Ω–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥ "/cancel", "/stop"."""
    if await state.get_state() is None:
        return

    await state.clear()
    await main_menu_handler(message, repo)
