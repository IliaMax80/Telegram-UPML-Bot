"""вынес настройки пользователя и сделал таблицу для таймера прачки

Revision ID: 0003
Revises: 0002
Create Date: 2023-05-17 00:05:13.638279

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0003'
down_revision = '0002'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'laundries',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('start_time', sa.DateTime(), nullable=True),
        sa.Column('end_time', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('user_id')
    )
    op.create_table(
        'settings',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('grade', sa.String(length=2), nullable=True),
        sa.Column('letter', sa.String(length=1), nullable=True),
        sa.Column('lessons_notify', sa.Boolean(), nullable=False),
        sa.Column('news_notify', sa.Boolean(), nullable=False),
        sa.Column('washing_time', sa.Integer(), nullable=True),
        sa.Column('drying_time', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('user_id')
    )

    op.execute(
        """
        INSERT INTO 
        settings 
        (user_id, grade, letter, lessons_notify, news_notify)
        SELECT 
        id, grade, letter, lessons_notify, news_notify 
        FROM 
        users
        """
    )

    op.execute('UPDATE settings SET washing_time = 60, drying_time = 1440')

    with op.batch_alter_table('settings') as batch_op:
        batch_op.alter_column('washing_time', nullable=False)
        batch_op.alter_column('drying_time', nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('news_notify')
        batch_op.drop_column('letter')
        batch_op.drop_column('lessons_notify')
        batch_op.drop_column('grade')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('grade', sa.VARCHAR(length=2), nullable=True)
        )
        batch_op.add_column(
            sa.Column('lessons_notify', sa.BOOLEAN(), nullable=False)
        )
        batch_op.add_column(
            sa.Column('letter', sa.VARCHAR(length=1), nullable=True)
        )
        batch_op.add_column(
            sa.Column('news_notify', sa.BOOLEAN(), nullable=False)
        )

    op.execute(
        "UPDATE users "
        "SET grade = (SELECT grade FROM settings WHERE settings.user_id = users.id), "
        "letter = (SELECT letter FROM settings WHERE settings.user_id = users.id), "
        "lessons_notify = (SELECT lessons_notify FROM settings WHERE settings.user_id = users.id), "
        "news_notify = (SELECT news_notify FROM settings WHERE settings.user_id = users.id)"
    )

    op.drop_table('settings')
    op.drop_table('laundries')
    # ### end Alembic commands ###
