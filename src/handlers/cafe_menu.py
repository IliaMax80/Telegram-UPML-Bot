from datetime import date
from functools import lru_cache

from cachetools.func import ttl_cache

from src.database.db_funcs import get_menu_by_date
from src.utils.datehelp import format_date, date_today, weekday_by_date


@ttl_cache(ttl=60 * 60 * 24)  # –°—É—Ç–∫–∏
def format_menu(meals: tuple[str, ...]) -> str:
    """
    –§–æ—Ä–º–∞—Ç –¥–Ω–µ–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—É.
    """

    return '\n\n'.join(
        f'*{meal_type}:*\n{meal or "–ù/–¥"}'.strip()
        for meal_type, meal in zip(
            ('üïó–ó–∞–≤—Ç—Ä–∞–∫', 'üïô–í—Ç–æ—Ä–æ–π –∑–∞–≤—Ç—Ä–∞–∫',
             'üïê–û–±–µ–¥', 'üïñ–ü–æ–ª–¥–Ω–∏–∫', 'üïñ–£–∂–∏–Ω'),
            meals
        )
    ).strip()


# @ttl_cache(ttl=60 * 60)  # –ß–∞—Å
def get_formatted_menu_by_date(menu_date: date = None) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é (—Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫) –ø–æ –¥–∞—Ç–µ.
    –ù/–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç.

    :param menu_date: –ù—É–∂–Ω–∞—è –¥–∞—Ç–∞.
    :return: –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ–ª–µ–≥–∏.
    """

    if menu_date is None:
        menu_date = date_today()

    menu = get_menu_by_date(menu_date)

    meals = (
        menu.breakfast if menu.breakfast else '–ù/–¥',
        menu.lunch if menu.lunch else '–ù/–¥',
        menu.dinner if menu.dinner else '–ù/–¥',
        menu.snack if menu.snack else '–ù/–¥',
        menu.supper if menu.supper else '–ù/–¥',
    )

    return f"üç∫ *–ú–µ–Ω—é –Ω–∞ {format_date(menu_date)} " \
           f"({weekday_by_date(menu_date)})*:\n\n{format_menu(meals)}"
